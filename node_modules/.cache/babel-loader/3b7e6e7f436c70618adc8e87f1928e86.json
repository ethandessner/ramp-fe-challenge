{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nimport { useCustomFetch } from \"./useCustomFetch\";\nexport function useTransactionsByEmployee() {\n  _s();\n\n  const {\n    fetchWithCache,\n    loading\n  } = useCustomFetch();\n  const [transactionsByEmployee, setTransactionsByEmployee] = useState(null);\n  const fetchById = useCallback(async employeeId => {\n    const data = await fetchWithCache(\"transactionsByEmployee\", {\n      employeeId\n    });\n    setTransactionsByEmployee(data);\n  }, [fetchWithCache]);\n  const updateTransactionById = useCallback(async (transactionId, updates) => {\n    const updatedTransactions = transactionsByEmployee === null || transactionsByEmployee === void 0 ? void 0 : transactionsByEmployee.map(transaction => {\n      if (transaction.id === transactionId) {\n        return { ...transaction,\n          ...updates\n        };\n      }\n\n      return transaction;\n    });\n\n    if (updatedTransactions) {\n      setTransactionsByEmployee(updatedTransactions); // send the updated transaction to the backend to persist the changes\n\n      await fetchWithCache(`transactions/${transactionId}`, { ...updates\n      }, \"PUT\");\n    }\n  }, [fetchWithCache, transactionsByEmployee]);\n  const invalidateData = useCallback(() => {\n    setTransactionsByEmployee(null);\n  }, []);\n  return {\n    data: transactionsByEmployee,\n    loading,\n    fetchById,\n    invalidateData\n  };\n}\n\n_s(useTransactionsByEmployee, \"DAb6q0GuT4BhUXRsoU4JWSsbCx8=\", false, function () {\n  return [useCustomFetch];\n});","map":{"version":3,"names":["useCallback","useState","useCustomFetch","useTransactionsByEmployee","fetchWithCache","loading","transactionsByEmployee","setTransactionsByEmployee","fetchById","employeeId","data","updateTransactionById","transactionId","updates","updatedTransactions","map","transaction","id","invalidateData"],"sources":["C:/Users/flavo/Downloads/ramp-fe-challenge/src/hooks/useTransactionsByEmployee.ts"],"sourcesContent":["import { useCallback, useState } from \"react\"\nimport { RequestByEmployeeParams, Transaction } from \"../utils/types\"\nimport { TransactionsByEmployeeResult } from \"./types\"\nimport { useCustomFetch } from \"./useCustomFetch\"\n\nexport function useTransactionsByEmployee(): TransactionsByEmployeeResult {\n  const { fetchWithCache, loading } = useCustomFetch()\n  const [transactionsByEmployee, setTransactionsByEmployee] = useState<Transaction[] | null>(null)\n\n  const fetchById = useCallback(\n    async (employeeId: string) => {\n      const data = await fetchWithCache<Transaction[], RequestByEmployeeParams>(\n        \"transactionsByEmployee\",\n        {\n          employeeId,\n        }\n      )\n\n      setTransactionsByEmployee(data)\n    },\n    [fetchWithCache]\n  )\n\n  const updateTransactionById = useCallback(\n    async (transactionId: string, updates: Partial<Transaction>) => {\n      const updatedTransactions = transactionsByEmployee?.map((transaction) => {\n        if (transaction.id === transactionId) {\n          return { ...transaction, ...updates };\n        }\n        return transaction;\n      });\n      if (updatedTransactions) {\n        setTransactionsByEmployee(updatedTransactions);\n        // send the updated transaction to the backend to persist the changes\n        await fetchWithCache<Transaction, Transaction>(\n          `transactions/${transactionId}`,\n          { ...updates },\n          \"PUT\"\n        );\n      }\n    },\n    [fetchWithCache, transactionsByEmployee]\n  );\n\n\n\n  const invalidateData = useCallback(() => {\n    setTransactionsByEmployee(null)\n  }, [])\n\n  return { data: transactionsByEmployee, loading, fetchById, invalidateData }\n}\n"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AAGA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,OAAO,SAASC,yBAAT,GAAmE;EAAA;;EACxE,MAAM;IAAEC,cAAF;IAAkBC;EAAlB,IAA8BH,cAAc,EAAlD;EACA,MAAM,CAACI,sBAAD,EAAyBC,yBAAzB,IAAsDN,QAAQ,CAAuB,IAAvB,CAApE;EAEA,MAAMO,SAAS,GAAGR,WAAW,CAC3B,MAAOS,UAAP,IAA8B;IAC5B,MAAMC,IAAI,GAAG,MAAMN,cAAc,CAC/B,wBAD+B,EAE/B;MACEK;IADF,CAF+B,CAAjC;IAOAF,yBAAyB,CAACG,IAAD,CAAzB;EACD,CAV0B,EAW3B,CAACN,cAAD,CAX2B,CAA7B;EAcA,MAAMO,qBAAqB,GAAGX,WAAW,CACvC,OAAOY,aAAP,EAA8BC,OAA9B,KAAgE;IAC9D,MAAMC,mBAAmB,GAAGR,sBAAH,aAAGA,sBAAH,uBAAGA,sBAAsB,CAAES,GAAxB,CAA6BC,WAAD,IAAiB;MACvE,IAAIA,WAAW,CAACC,EAAZ,KAAmBL,aAAvB,EAAsC;QACpC,OAAO,EAAE,GAAGI,WAAL;UAAkB,GAAGH;QAArB,CAAP;MACD;;MACD,OAAOG,WAAP;IACD,CAL2B,CAA5B;;IAMA,IAAIF,mBAAJ,EAAyB;MACvBP,yBAAyB,CAACO,mBAAD,CAAzB,CADuB,CAEvB;;MACA,MAAMV,cAAc,CACjB,gBAAeQ,aAAc,EADZ,EAElB,EAAE,GAAGC;MAAL,CAFkB,EAGlB,KAHkB,CAApB;IAKD;EACF,CAjBsC,EAkBvC,CAACT,cAAD,EAAiBE,sBAAjB,CAlBuC,CAAzC;EAuBA,MAAMY,cAAc,GAAGlB,WAAW,CAAC,MAAM;IACvCO,yBAAyB,CAAC,IAAD,CAAzB;EACD,CAFiC,EAE/B,EAF+B,CAAlC;EAIA,OAAO;IAAEG,IAAI,EAAEJ,sBAAR;IAAgCD,OAAhC;IAAyCG,SAAzC;IAAoDU;EAApD,CAAP;AACD;;GA9Cef,yB;UACsBD,c"},"metadata":{},"sourceType":"module"}